% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extracting.R
\name{get_sensor_data}
\alias{get_sensor_data}
\title{This function extracts data from the database.}
\usage{
get_sensor_data(tablename, do_aggregate = FALSE, clean_first = FALSE,
  aggregation_unit = "15 min", xtravars = "all", summarize_vars = NULL,
  grouping_vars = c("subjectid", "sessionid"))
}
\arguments{
\item{tablename}{What is the name of the table (as a string).}

\item{do_aggregate}{should the data be aggregated (TRUE/FALSE).}

\item{clean_first}{should the data go through the table-specific cleaning procedure first.}

\item{aggregation_unit}{what time unit should be used for aggregation. This should be a string with a number followed by min, hour, day. Plural is OK (e.g., 'days')}

\item{xtravars}{what extra variables should be extracted when grabbing raw data. Should be NULL if aggregating! Note that this should be a vector of variable names or the word "all" to get all variables.}

\item{summarize_vars}{What variables will be summarized. This should be a vector of variable names -- variables should be numeric.}

\item{grouping_vars}{What variables will be used for aggregation (these are the keys)}
}
\value{
user.
}
\description{
This function extracts data from the database.
}
\examples{
res<-get_sensor_data("hxi", clean_first=FALSE, xtravars="datetime") 
res<-get_sensor_data("hxi", xtravars=c("datetime", "subjectid"))  

res<-get_sensor_data("gps")
res<-get_sensor_data(tablename= "hxi", 
                     do_aggregate=TRUE, 
                     xtravars= NULL,
                      aggregation_unit="2 hours",
                     grouping_vars = c("subjectid", "sessionid"),
                     summarize_vars=c("cadence", "breathing_rate"))

# this will give you average lat, long (centroid) of each subject/session
res<-get_sensor_data("gps",
                     do_aggregate=TRUE, 
                     xtravars= NULL,
                     aggregation_unit="complete",
                     grouping_vars = c( "subjectid", "sessionid"),
                     summarize_vars=c("latitude", "longitude"))
# gives error, check xtravars
res<-get_sensor_data("hxi", xtravars=c("datetime", "asdfjasf")) #gives error

# gives error check grouping vars
res<-get_sensor_data("hxi", 
                     do_aggregate=TRUE, 
                     xtravars= NULL,
                     aggregation_unit="2 hours",
                     grouping_vars = c("datetime", "subjectid", "asdlfjsdlfj"),
                     summarize_vars=c("cadence", "breathing_rate"))
                     
res<-get_sensor_data("mpm",
   clean_first = TRUE,
   do_aggregate=TRUE,
   xtravars  = NULL,
   aggregation_unit="1 hour",
   grouping_vars = c( "subjectid", "sessionid"),
   summarize_vars = c("temperature", "rh", "flow"))
   
   
}
\seealso{
Other postgresql functions: \code{\link{add_tables_db}},
  \code{\link{agg_unit_ok}}, \code{\link{aggregate_data}},
  \code{\link{already_uploaded}},
  \code{\link{backup_database}},
  \code{\link{column_exists}}, \code{\link{column_types}},
  \code{\link{create_database}}, \code{\link{delete_data}},
  \code{\link{get_column_names}},
  \code{\link{get_connection}},
  \code{\link{get_filenames_forSubject}},
  \code{\link{get_filenames}}, \code{\link{get_row_count}},
  \code{\link{get_subjectid}},
  \code{\link{kill_pg_connections}},
  \code{\link{list_tables}}, \code{\link{table_exists}},
  \code{\link{upload_postgres}},
  \code{\link{valid_connection}}
}
